import sys

class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        if len(nums1) > len(nums2):
            nums1, nums2 = nums2, nums1
        n1 = len(nums1)
        n2 = len(nums2)

        h = n1
        l = 0

        while l <= h:
            m1 = (l + h) // 2
            m2 = (n1 + n2 + 1) // 2 - m1
            
            l1 = -sys.maxsize - 1 if not m1 else nums1[m1 - 1]
            l2 = -sys.maxsize - 1 if not m2 else nums2[m2 - 1]

            r1 = sys.maxsize if m1 == n1 else nums1[m1]
            r2 = sys.maxsize if m2 == n2 else nums2[m2]

            if l1 <= r2 and l2 <= r1:
                if (n1 + n2) % 2:
                    return max(l1, l2)
                return (max(l1,l2) + min(r1, r2)) / 2
            
            elif l1 > r2:
                h = m1 - 1
            else:
                l = m1 + 1

        return 0.0
