class Solution {
    public int numSimilarGroups(String[] strs) {

        int ans = 0;
        boolean[] seen = new boolean[strs.length];

        for(int i = 0; i < strs.length; i++) {

            if(!seen[i]) {

                dfs(i, strs, seen);
                ans++;
            
            }

        }

        return ans;

    }

    private void dfs(int i, final String[] strs, boolean[] seen) {

        seen[i] = true;

        for(int j = 0; j < strs.length; j++) {

            if(!seen[j] && is_similar(strs[i], strs[j])) {

                dfs(j, strs, seen);

            }
        }
    }

    private boolean is_similar(final String str1, final String str2) {

        int c = 0;

        for(int i = 0; i < str1.length(); i++) {

            if(str1.charAt(i) != str2.charAt(i) && ++c > 2) {

                return false;

            }

        }

        return true;

    }
}
