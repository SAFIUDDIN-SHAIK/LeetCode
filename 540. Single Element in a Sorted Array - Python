class Solution:
    def singleNonDuplicate(self, nums: List[int]) -> int:
        l = 0
        r = len(nums) - 1
        n = len(nums)
        if n == 1:
            return nums[0]
        while l <= r:
            m = (l + r) // 2
            if m and m < n - 1:
                if nums[m] != nums[m - 1] and nums[m] != nums[m + 1]:
                    return nums[m]
                elif nums[m] == nums[m-1]:
                    if abs(l - m + 1) % 2:
                        r = m - 2
                    else:
                        l = m + 1
                else:
                    if abs(l - m) % 2:
                        r = m - 1
                    else:
                        l = m + 2
            elif m == n - 1:
                if nums[m] != nums[m-1]:
                    return nums[m]
                else:
                    l = m
            else:
                if nums[0] != nums[1]:
                    return nums[0]
                else:
                    l = 0
        return nums[l]
