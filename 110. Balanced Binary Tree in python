# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        if not root:
            return True
        if self.f(root) == -1:
            return False
        
        return True

    def f(self,root):
        if not root:
            return 0

        l = self.f(root.left) 
        r = self.f(root.right) 

        if l == -1 or r == -1:
            return -1

        if abs(l-r) > 1:
            return -1

        return max(l,r) + 1
